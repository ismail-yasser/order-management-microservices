version: '3.8'

services:
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - INVENTORY_SERVICE_URL=http://inventory-service:3001
      - PAYMENT_SERVICE_URL=http://payment-service:3002
      - SHIPPING_SERVICE_URL=http://shipping-service:3003
    networks:
      - microservices-net
    depends_on:
      - inventory-service
      - payment-service
      - shipping-service
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/health"]
      interval: 30s
      timeout: 3s
      retries: 3

  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3001/health"]
      interval: 30s
      timeout: 3s
      retries: 3

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3002/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      
  shipping-service:
    build:
      context: ./shipping-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
    networks:
      - microservices-net
    volumes:
      - ./shipping-service/labels:/app/labels
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3003/health"]
      interval: 30s
      timeout: 3s
      retries: 3

networks:
  microservices-net:
    driver: bridge
